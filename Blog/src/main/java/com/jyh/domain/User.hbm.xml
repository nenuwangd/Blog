<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="com.jyh.domain.User" table="user" catalog="blog">
        <id name="userId" type="java.lang.String">
            <column name="user_id" />
            <generator class="uuid.hex" />
        </id>
        <property name="userName" type="java.lang.String">
            <column name="user_name" not-null="true" />
        </property>
        <property name="password" type="java.lang.String">
            <column name="password" not-null="true" />
        </property>
        <property name="userNickname" type="java.lang.String">
            <column name="user_nickname" />
        </property>
        <property name="userTruename" type="java.lang.String">
            <column name="user_truename" />
        </property>
         <property name="userImg" type="java.lang.String">
            <column name="user_img" />
        </property>
        <property name="birthday" type="java.util.Date">
            <column name="birthday" length="0" />
        </property>
        <property name="gender" type="java.lang.Integer">
            <column name="gender" />
        </property>
        <property name="address" type="java.lang.String">
            <column name="address" />
        </property>
        <property name="industry" type="java.lang.String">
            <column name="industry" />
        </property>
        <property name="career" type="java.lang.String">
            <column name="career" />
        </property>
        <property name="email" type="java.lang.String">
            <column name="email" />
        </property>
        <property name="telphone" type="java.lang.String">
            <column name="telphone" />
        </property>
        <property name="qq" type="java.lang.String">
            <column name="qq" />
        </property>
        <property name="wechat" type="java.lang.String">
            <column name="wechat" />
        </property>
        <property name="knowField" type="java.lang.String">
            <column name="know_field" length="1000" />
        </property>
        <property name="professionalSkill" type="java.lang.String">
            <column name="professional_skill" length="1000" />
        </property>
        <property name="myProvince" type="java.lang.String">
            <column name="province" />
        </property>
        <property name="myCity" type="java.lang.String">
            <column name="city" />
        </property>
        <property name="introduction" type="java.lang.String">
            <column name="introduction" length="1000" />
        </property>
         <property name="visitedNum" type="java.lang.Integer">
            <column name="visited_num" length="11" />
        </property>
        <set name="educations" cascade="delete" order-by="startDate" inverse="true" >
            <key>
                <column name="userid" />
            </key>
            <one-to-many class="com.jyh.domain.Education" />
        </set>
        <set name="optionLogs" cascade="delete" inverse="true">
            <key>
                <column name="option_userid" />
            </key>
            <one-to-many class="com.jyh.domain.OptionLog" />
        </set>
        <set name="articlesForCollectorId" cascade="delete" inverse="true">
            <key>
                <column name="collector_id" />
            </key>
            <one-to-many class="com.jyh.domain.Article" />
        </set>
        <set name="articlesForAuthorId" cascade="delete" order-by="articleDate DESC" inverse="true">
            <key>
                <column name="author_id" />
            </key>
            <one-to-many class="com.jyh.domain.Article" />
        </set>
        <set name="attentionsForFollower" cascade="delete" inverse="true">
            <key>
                <column name="follower" />
            </key>
            <one-to-many class="com.jyh.domain.Attention" />
        </set>
        <set name="commentsForCommentUser" cascade="delete" inverse="true">
            <key>
                <column name="comment_user" />
            </key>
            <one-to-many class="com.jyh.domain.Comment" />
        </set>
        <set name="works" cascade="delete" order-by="startDate" inverse="true">
            <key>
                <column name="userid" />
            </key>
            <one-to-many class="com.jyh.domain.Work" />
        </set>
        <set name="loginLogs" cascade="delete" inverse="true">
            <key>
                <column name="login_userid" />
            </key>
            <one-to-many class="com.jyh.domain.LoginLog" />
        </set>
        <set name="attentionsForUser" cascade="delete" inverse="true">
            <key>
                <column name="user" />
            </key>
            <one-to-many class="com.jyh.domain.Attention" />
        </set>
        <set name="personalClassifications" order-by="classificationName" cascade="delete" inverse="true" lazy="false">
            <key>
                <column name="user_id" />
            </key>
            <one-to-many class="com.jyh.domain.PersonalClassification" />
        </set>
        <set name="commentsForReplyUser" cascade="delete" inverse="true">
            <key>
                <column name="reply_user" />
            </key>
            <one-to-many class="com.jyh.domain.Comment" />
        </set>
         <set name="collection" cascade="delete" inverse="true">
            <key>
                <column name="user_id" />
            </key>
            <one-to-many class="com.jyh.domain.Collection" />
        </set>
         <set name="dynamicUser" cascade="save-update" inverse="true">
            <key>
                <column name="dynamic_user" />
            </key>
            <one-to-many class="com.jyh.domain.Dynamic" />
        </set>
        <set name="userBySendUser" cascade="save-update" inverse="true">
            <key>
                <column name="send_user" />
            </key>
            <one-to-many class="com.jyh.domain.Letter" />
        </set>
         <set name="userByReceiveUser" cascade="save-update" inverse="true">
            <key>
                <column name="receive_user" />
            </key>
            <one-to-many class="com.jyh.domain.Letter" />
        </set>
    </class>
</hibernate-mapping>
